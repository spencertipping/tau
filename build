#!/bin/bash
set -euo pipefail


t() {
  echo "$@"
  time "$@"
}

usage() {
  echo "usage: $0 t[est]"
  echo "       $0 d[ebug]"
  echo "       $0 q[uick]"
  exit 1
}


t_gcc_opts=(                              -std=c++20 -O3 )
t_gcc_debug_opts=( -Wall -Wno-parentheses -std=c++20 -O0 -g )
t_em_opts=(                               -std=c++20 -O3 -fexceptions -sASYNCIFY -sTOTAL_MEMORY=1024MB -Wno-parentheses )


(( $# )) || usage

cmd=$1
shift

cd "$(dirname "$0")"

case $cmd in
  q*) rm -f t/test-quick t/test32-quick
      t g++                "${t_gcc_debug_opts[@]}" -DQUICK=1      t/test.cc -o t/test-quick -lboost_context &
      t i686-linux-gnu-g++ "${t_gcc_debug_opts[@]}" -DQUICK=1 -m32 t/test.cc -o t/test32-quick &
      wait

      if valgrind --track-origins=yes t/test-quick >t/test-quick.log 2>&1; then
        echo -e "\033[1;32m64-bit all ok\033[0;0m"
      else
        echo -e "\033[1;31merror\033[0;0m"
        less t/test-quick.log
        exit 1
      fi

      if valgrind --track-origins=yes t/test32-quick >t/test32-quick.log 2>&1; then
        echo -e "\033[1;32m32-bit all ok\033[0;0m"
      else
        echo -e "\033[1;31merror\033[0;0m"
        less t/test32-quick.log
        exit 1
      fi
      ;;

  d*) rm -f t/test-debug t/test32-debug
      t g++                "${t_gcc_debug_opts[@]}"      t/test.cc -o t/test-debug -lboost_context &
      t i686-linux-gnu-g++ "${t_gcc_debug_opts[@]}" -m32 t/test.cc -o t/test32-debug &
      wait
      ;;

  t*) rm -f t/test t/test32 t/test.js
      t g++                "${t_gcc_opts[@]}"       t/test.cc -o t/test   -lboost_context &
      t i686-linux-gnu-g++ "${t_gcc_opts[@]}" -m32  t/test.cc -o t/test32 &
      t dev/emsdk em++     "${t_em_opts[@]}"        t/test.cc -o t/test.js &
      wait
      ;;

  *)  usage
      ;;
esac
