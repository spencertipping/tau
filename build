#!/bin/bash
set -euo pipefail


t() {
  echo "$@"
  time "$@"
}

usage() {
  echo "usage: $0 t[est]"
  echo "       $0 d[ebug]"
  echo "       $0 q[uick]"
  exit 1
}


t_gcc_opts=( -std=c++20 -O3 )
t_gcc_debug_opts=( -Wall -Wno-parentheses -std=c++20 -O0 -g )
t_em_opts=(  -std=c++20 -O3 -fexceptions -sASYNCIFY -sTOTAL_MEMORY=1024MB -Wno-parentheses )


(( $# )) || usage

cmd=$1
shift

cd "$(dirname "$0")"

case $cmd in
  q*) t g++ "${t_gcc_debug_opts[@]}" -DQUICK=1 t/test.cc -o t/test-quick -lboost_context
      if valgrind --track-origins=yes t/test-quick > t/test-quick.log; then
        echo -e "\033[1;32mall ok\033[0;0m"
      else
        echo -e "\033[1;31merror\033[0;0m"
        less t/test-quick.log
        exit 1
      fi
      ;;

  d*) t g++                "${t_gcc_debug_opts[@]}"      t/test.cc -o t/test-debug -lboost_context
      t i686-linux-gnu-g++ "${t_gcc_debug_opts[@]}" -m32 t/test.cc -o t/test32-debug
      ;;

  t*) t g++                "${t_gcc_opts[@]}"       t/test.cc -o t/test   -lboost_context
      t i686-linux-gnu-g++ "${t_gcc_opts[@]}" -m32  t/test.cc -o t/test32
      t dev/emsdk em++     "${t_em_opts[@]}"        t/test.cc -o t/test.js
      ;;

  *)  usage
      ;;
esac
