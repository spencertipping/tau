#!/bin/bash
set -euo pipefail
cd "$(dirname "$0")"


pull()
{
  local host=${1:-set.128}
  local path=${2:-/nvme/asqi/tau}
  rsync -auzP $host:$path/bin ./
}


sync()
{
  local host=${1:-set.128}
  local path=${2:-/nvme/asqi/tau}
  rsync -azP --delete \
        build dep dev doc README.md tau.hh sigma*.hh sigma tau try \
        test lazytest makefile compile_flags.txt \
        $host:$path/ &
  rsync -azP --delete dev/emsdk $host:$path/dev/ &
  wait
  date +"synced at %Y.%m%d.%H%M%S"
}


sloop()
{
  watch $0 sync "$@"
}


server_build()
{
  local host=${1:-set.128}
  local path=${2:-/nvme/asqi/tau}
  shift 2
  sync $host $path
  ssh $host bash -c ":; cd $path; $*"
  rsync -azP --delete $host:$path/bin ./
}


install_deps()
{
  sudo apt update
  sudo apt install -y \
       docker.io build-essential \
       libboost-context-dev libboost-stacktrace-dev libzstd-dev libsqlite3-dev \
       liblmdb-dev libxcb1-dev libx11-dev libx11-xcb-dev libgl-dev \
       libgles-dev \
       libxcb-xinput-dev \
       libxcb-keysyms1-dev \
       libpango1.0-dev libcairo2-dev libpangocairo-1.0-0 \
       clang
}


install_server_deps()
{
  sudo apt update
  sudo apt install -y \
       docker.io build-essential \
       libboost-context-dev libboost-stacktrace-dev libzstd-dev libsqlite3-dev \
       liblmdb-dev \
       clang
}


todos()
{
  ag '^[^#\n].*TODO' doc tau sigma
  echo -e "\033[1;32m$(ag '^[^#\n].*TODO' doc tau sigma | wc -l) TODO(s) total\033[0;0m"
}


run()
{
  if [[ ${HOSTNAME:0:1} == i ]]; then
    server_build set.128 /nvme/asqi/tau "$@"
  else
    exec "$@"
  fi
}


cmd=$1
shift
case $cmd in
  sloop)      sloop "$@" ;;
  sync)       sync "$@" ;;
  pull)       pull "$@" ;;
  deps)       install_deps "$@" ;;
  serverdeps) install_server_deps "$@" ;;
  todo*)      todos "$@" ;;
  *)          run $cmd "$@" ;;
esac
